name: Django CI

on:
  push:
    branches: [ "main" ]
    tags:
      - 'resolved-issue-*'
  pull_request:
    branches: [ "main" ]
  issues:
    types: [opened]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        run: |
          python manage.py test
      - name: Run Flake8 for Linting
        run: |
          pip install flake8
          flake8 .
        continue-on-error: true
      - name: Run Tests with Code Coverage
        run: |
          pip install coverage
          coverage run --source='.' manage.py test
          coverage report -m

  create-branch-for-issue:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'opened'
    steps:
      - uses: actions/checkout@v3
      - name: Create Branch for Issue
        run: |
          git config --global user.email "tkyojins@gmail.com"
          git config --global user.name "The Kyojins"
          git fetch
          git checkout -b issue-${{ github.event.issue.number }} origin/main
          git push origin issue-${{ github.event.issue.number }}

  resolve-issue:
    if: startsWith(github.ref, 'refs/tags/resolved-issue-')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Extract issue number from tag
        id: issue-number
        run: echo "::set-output name=number::$(echo ${{ github.ref }} | cut -d '-' -f 3)"

      - name: Close GitHub Issue
        uses: peter-evans/close-issue@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ steps.issue-number.outputs.number }}

     - name: Notify Monitoring System (e.g., Sentry)
        run: |
          curl https://sentry.io/api/0/projects/thekyojins/python-django/issues/${{ steps.issue-number.outputs.number }}/resolve/ \
          -H 'Authorization: Bearer ${{ secrets.SENTRY_AUTH_TOKEN }}'